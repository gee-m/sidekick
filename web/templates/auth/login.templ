package auth

import "github.com/gee-m/sidekick/web/templates/layout"

type LoginProps struct {
    ErrorMessage string
    ShowSignup bool
}

templ LoginPage(props LoginProps) {
    @layout.Base() {
        <div id="login-container" class="min-h-screen flex items-center justify-center bg-gradient-to-br from-indigo-500 via-purple-500 to-pink-500">
            <div class="bg-white/90 backdrop-blur-sm p-10 rounded-2xl shadow-xl w-full max-w-md">
                <div class="text-center mb-8">
                    <h2 class="text-3xl font-bold text-gray-800">Welcome Back</h2>
                    <p class="text-gray-600 mt-2">Please sign in to continue</p>
                </div>

                <div id="login-error">
                    @ErrorMessage(props.ErrorMessage)
                </div>

                <form
                    hx-post="/auth/login"
                    hx-trigger="submit"
                    hx-target="#login-error"
                    class="space-y-6"
                >
                    <div class="space-y-4">
                        <div>
                            <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email</label>
                            <input
                                type="email"
                                id="email"
                                name="email"
                                hx-post="/auth/check-email"
                                hx-trigger="keyup changed delay:500ms"
                                hx-target="#action-buttons"
                                hx-swap="innerHTML"
                                class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-indigo-400 focus:border-transparent transition duration-200 ease-in-out"
                                placeholder="Enter your email"
                            />
                        </div>
                        <div>
                            <label for="password" class="block text-sm font-medium text-gray-700 mb-1">Password</label>
                            <input
                                type="password"
                                id="password"
                                name="password"
                                minlength="6"
                                required
                                class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-indigo-400 focus:border-transparent transition duration-200 ease-in-out"
                                placeholder="Enter your password (min 6 characters)"
                            />
                        </div>
                    </div>

                    <div class="flex items-center">
                        <label class="flex items-center">
                            <input type="checkbox" class="w-4 h-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500"/>
                            <span class="ml-2 text-sm text-gray-600">Remember me</span>
                        </label>
                    </div>

                    <div id="action-buttons" class="flex gap-2">
                        <button
                            type="submit"
                            class="flex-1 py-3 px-4 bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-700 hover:to-purple-700 text-white font-medium rounded-lg shadow-lg hover:shadow-xl transition duration-200 ease-in-out transform hover:-translate-y-0.5"
                        >
                            Sign In
                        </button>
                        if props.ShowSignup {
                            <button
                                type="submit"
                                formaction="/auth/signup"
                                class="flex-1 py-3 px-4 bg-gradient-to-r from-emerald-600 to-teal-600 hover:from-emerald-700 hover:to-teal-700 text-white font-medium rounded-lg shadow-lg hover:shadow-xl transition duration-200 ease-in-out transform hover:-translate-y-0.5"
                            >
                                Sign Up
                            </button>
                        }
                    </div>
                </form>
            </div>
        </div>
    }
}

templ ErrorMessage(message string) {
    if message != "" {
        <div class="bg-red-100/80 backdrop-blur-sm border border-red-400 text-red-700 px-4 py-3 rounded-lg mb-6" role="alert">
            <span class="block sm:inline">{ message }</span>
        </div>
    }
}

templ ActionButtons(showSignup bool) {
    <button
        type="submit"
        class="flex-1 py-3 px-4 bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-700 hover:to-purple-700 text-white font-medium rounded-lg shadow-lg hover:shadow-xl transition duration-200 ease-in-out transform hover:-translate-y-0.5"
    >
        Sign In
    </button>
    if showSignup {
        <button
            type="submit"
            formaction="/auth/signup"
            class="flex-1 py-3 px-4 bg-gradient-to-r from-emerald-600 to-teal-600 hover:from-emerald-700 hover:to-teal-700 text-white font-medium rounded-lg shadow-lg hover:shadow-xl transition duration-200 ease-in-out transform hover:-translate-y-0.5"
        >
            Sign Up
        </button>
    }
}

templ LogoutButton() {
    <form
        action="/auth/logout"
        method="POST"
        class="inline-block"
    >
        <button
            type="submit"
            class="px-4 py-2 bg-red-600 hover:bg-red-700 text-white font-medium rounded-lg shadow-lg hover:shadow-xl transition duration-200 ease-in-out transform hover:-translate-y-0.5"
        >
            Logout
        </button>
    </form>
}
